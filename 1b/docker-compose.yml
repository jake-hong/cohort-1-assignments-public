version: "3.8"

services:
  caddy:
    image: caddy:2.7-alpine
    container_name: caddy
    ports:
      - "8080:80"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - geth
    networks:
      - geth-network
      - blockscout-network
      - graph-network
  # ngrok:
  sc-deployer:
    # image digest varies by platform, so need to change as necessary
    image: ghcr.io/foundry-rs/foundry:stable@sha256:67c9d2195925b4b045b3d49c3155d9097c80d9c06cc3c95adb7d7ac3c93c9a40
    platform: linux/arm64
    container_name: sc-deployer
    user: root # still bug, don't know how to install nodejs and npm
    volumes:
      - ./sc-deployer:/workspace
      - ./geth-init:/geth-init:ro
      - .:/shared
    working_dir: /workspace
    entrypoint: ["/bin/sh", "/workspace/entrypoint.sh"]
    depends_on:
      - geth
    networks:
      - geth-network
  sc-deployment-server:
    image: caddy:2.7-alpine
    container_name: sc-deployment-server
    ports:
      - "8081:80"
    volumes:
      - ./sc-deployment-server/Caddyfile:/etc/caddy/Caddyfile
      - .:/data:ro
    depends_on:
      - sc-deployer
    networks:
      - geth-network
  geth:
    image: ethereum/client-go:v1.15.0
    container_name: geth
    ports:
      - "8545:8545" # HTTP RPC
      - "8546:8546" # WebSocket RPC
      - "30303:30303" # P2P
      - "30303:30303/udp" # P2P UDP
    volumes:
      - geth-data:/root/.ethereum
      - ./geth:/geth
    command: >
      --dev
      --datadir /root/.ethereum
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.corsdomain "*"
      --http.vhosts "*"
      --http.rpcprefix "/"
      --http.api "eth,net,web3,personal,miner,admin,debug,txpool"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.api "eth,net,web3,personal,miner,admin,debug,txpool"
      --ws.origins "*"
      --allow-insecure-unlock
      --mine
      --networkid 1337
      --nodiscover
      --verbosity 3
      --miner.gaslimit 8000000
    restart: unless-stopped
    networks:
      - geth-network
  geth-init:
    image: ethereum/client-go:v1.15.0
    container_name: geth-init
    volumes:
      - ./geth-init:/scripts
      - geth-data:/root/.ethereum
      - ./geth-init:/shared
    entrypoint: ["/bin/sh", "/scripts/entrypoint.sh"]
    depends_on:
      - geth
    networks:
      - geth-network
  graph-ipfs:
    image: ipfs/kubo:v0.29.0
    container_name: graph-ipfs
    ports:
      - "5001:5001"
    volumes:
      - graph-ipfs-data:/data/ipfs
    environment:
      - IPFS_PROFILE=server
    networks:
      - graph-network

  graph-postgres:
    image: postgres:15
    container_name: graph-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=graph
      - POSTGRES_PASSWORD=letmein
      - POSTGRES_DB=graph
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_INITDB_ARGS=--locale=C --encoding=UTF8
    volumes:
      - graph-postgres-data:/var/lib/postgresql/data
    networks:
      - graph-network

  graph-redis:
    image: redis:7-alpine
    container_name: graph-redis
    ports:
      - "6379:6379"
    volumes:
      - graph-redis-data:/data
    networks:
      - graph-network

  graph-node:
    image: graphprotocol/graph-node:v0.36.1
    container_name: graph-node
    depends_on:
      - graph-ipfs
      - graph-postgres
      - graph-redis
      - geth
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    environment:
      - postgres_host=graph-postgres
      - postgres_user=graph
      - postgres_pass=letmein
      - postgres_db=graph
      - ipfs=graph-ipfs:5001
      - ethereum=mainnet:http://geth:8545
      - GRAPH_LOG=info
      - RUST_LOG=info
      - GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH=true
    networks:
      - graph-network
      - geth-network

  # blockscout: should be another docker-compose.yml file from https://github.com/blockscout/blockscout/tree/master/docker-compose. Don't create a container in this file.

volumes:
  geth-data:
  graph-ipfs-data:
  graph-postgres-data:
  graph-redis-data:

networks:
  geth-network:
    driver: bridge
  blockscout-network:
    external: true
    name: blockscout_blockscout-network
  graph-network:
    driver: bridge
